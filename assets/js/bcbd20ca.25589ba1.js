"use strict";(self.webpackChunkkarabiner_ts_docs=self.webpackChunkkarabiner_ts_docs||[]).push([[205],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>y});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=n.createContext({}),p=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},m=function(e){var t=p(e.components);return n.createElement(o.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),c=p(r),u=a,y=c["".concat(o,".").concat(u)]||c[u]||d[u]||i;return r?n.createElement(y,l(l({ref:t},m),{},{components:r})):n.createElement(y,l({ref:t},m))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=u;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[c]="string"==typeof e?e:a,l[1]=s;for(var p=2;p<i;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},1804:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const i={title:"simlayer()"},l=void 0,s={unversionedId:"rules/simlayer",id:"rules/simlayer",title:"simlayer()",description:"Generated JSON in profiles.complex_modifications.rules",source:"@site/docs/rules/simlayer.md",sourceDirName:"rules",slug:"/rules/simlayer",permalink:"/karabiner.ts/rules/simlayer",draft:!1,tags:[],version:"current",frontMatter:{title:"simlayer()"},sidebar:"docs",previous:{title:"layer()",permalink:"/karabiner.ts/rules/layer"}},o={},p=[{value:"How simlayer works",id:"how-simlayer-works",level:2},{value:"The threshold time",id:"the-threshold-time",level:2}],m={toc:p},c="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"simlayer('a', 'a-mode').manipulators([\n  map(1).to(2), // Only when key 'a' is pressed then key '1' right after \n])\n")),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Generated JSON in profiles.complex_modifications.rules"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "description": "Simlayer - a-mode",\n  "manipulators": [\n    {\n      "type": "basic",\n      "from": {"key_code": "1"},\n      "to": [{"key_code": "2"}],\n      "conditions": [{"type": "variable_if", "name": "a-mode", "value": 1}]\n    },\n    {\n      "type": "basic",\n      "from": {\n        // highlight-next-line\n        "simultaneous": [{"key_code": "a"}, {"key_code": "1"}],\n        "simultaneous_options": {\n          "detect_key_down_uninterruptedly": true,\n          "key_down_order": "strict",\n          "key_up_order": "strict_inverse",\n          "key_up_when": "any",\n          // highlight-next-line\n          "to_after_key_up": [{"set_variable": {"name": "a-mode", "value": 0}}]\n        }\n      },\n      // highlight-next-line\n      "to": [{"set_variable": {"name": "a-mode", "value": 1}}, {"key_code": "2"}],\n      // highlight-next-line\n      "parameters": {"basic.simultaneous_threshold_milliseconds": 200}\n    }\n  ]\n}\n'))),(0,a.kt)("h2",{id:"how-simlayer-works"},"How simlayer works"),(0,a.kt)("p",null,"Simlayer is similar to ",(0,a.kt)("a",{parentName:"p",href:"./layer"},"layer"),", which add a variable on a group of ",(0,a.kt)("inlineCode",{parentName:"p"},"manipulators"),".\nThe difference is how the variable is toggled. "),(0,a.kt)("p",null,"Layer sets the variable to 1\nwhen the layer key is pressed down and set it back to 0 when the key is released.\nSimlayer uses ",(0,a.kt)("a",{parentName:"p",href:"https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/from/simultaneous/"},"from.simultaneous"),"\nfunctionality instead. "),(0,a.kt)("p",null,"Simlayer sets the variable is only set to 1 if the simlayer key is pressed,\nthen any key on the simlayer is pressed within the threshold time (",(0,a.kt)("inlineCode",{parentName:"p"},"200 milliseconds"),"\nby default). Then the variable remains 1 until the simlayer key is released. "),(0,a.kt)("p",null,"For example, "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"simlayer('a', 'a-mode').manipulators([\n  map(',').to('<'),\n  map('.').to('>')\n])\n")),(0,a.kt)("p",null,"If key 'a' is pressed and held for longer than the threshold time, 'a' starts to repeat."),(0,a.kt)("p",null,"If key 'a' is pressed and held, and key ',' is also pressed within the threshold time,\nthe simlayer variable is set to 1, and '<' is triggered. As long as key 'a' is not released,\n'<' and '>' will be triggered when ',' or '.' is pressed."),(0,a.kt)("p",null,"Once key 'a' is released the simlayer variable is set back to 0. "),(0,a.kt)("h2",{id:"the-threshold-time"},"The threshold time"),(0,a.kt)("p",null,"The default threshold time is ",(0,a.kt)("inlineCode",{parentName:"p"},"200 milliseconds"),". It can be set on each layer"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"simlayer('a', 'a-mode', 100) // The third parameter `threshold` in milliseconds\n")),(0,a.kt)("p",null,"It can also be set at ",(0,a.kt)("inlineCode",{parentName:"p"},"writeToProfile()")," for all simlayer in the profile. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"writeToProfile(\n  '--dry-run', // profile name \n  [], // rules\n  { 'simlayer.threshold_milliseconds': 100 }, // parameters \n)\n")))}d.isMDXComponent=!0}}]);