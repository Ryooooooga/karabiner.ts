"use strict";(self.webpackChunkkarabiner_ts_docs=self.webpackChunkkarabiner_ts_docs||[]).push([[357],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=r.createContext({}),l=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=l(e.components);return r.createElement(p.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=l(t),f=i,m=u["".concat(p,".").concat(f)]||u[f]||d[f]||o;return t?r.createElement(m,a(a({ref:n},c),{},{components:t})):r.createElement(m,a({ref:n},c))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=f;var s={};for(var p in n)hasOwnProperty.call(n,p)&&(s[p]=n[p]);s.originalType=e,s[u]="string"==typeof e?e:i,a[1]=s;for(var l=2;l<o;l++)a[l]=t[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},5095:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=t(7462),i=(t(7294),t(3905));const o={title:"condition / if*()"},a="condition",s={unversionedId:"manipulators/condition",id:"manipulators/condition",title:"condition / if*()",description:"Most of the features are implemented by adding variable conditions to",source:"@site/docs/manipulators/condition.md",sourceDirName:"manipulators",slug:"/manipulators/condition",permalink:"/karabiner.ts/manipulators/condition",draft:!1,tags:[],version:"current",frontMatter:{title:"condition / if*()"},sidebar:"docs",previous:{title:"to*()",permalink:"/karabiner.ts/manipulators/to"},next:{title:"type: mouse_motion_to_scroll",permalink:"/karabiner.ts/manipulators/mouse_motion_to_scroll"}},p={},l=[],c={toc:l},u="wrapper";function d(e){let{components:n,...t}=e;return(0,i.kt)(u,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"condition"},"condition"),(0,i.kt)("p",null,"Most of the features are implemented by adding ",(0,i.kt)("inlineCode",{parentName:"p"},"variable")," conditions to\nmanipulators. There are a few other types of conditions too."),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Condition type"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"type Condition =\n  | ({\n      type: 'frontmost_application_if' | 'frontmost_application_unless'\n      description?: string\n    } & ({ bundle_identifiers: string[] } | { file_paths: string[] }))\n  | {\n      type:\n        | 'device_if'\n        | 'device_unless'\n        | 'device_exists_if'\n        | 'device_exists_unless'\n      identifiers: DeviceIdentifier[]\n      description?: string\n    }\n  | {\n      type: 'keyboard_type_if' | 'keyboard_type_unless'\n      keyboard_types: KeyboardType[]\n      description?: string\n    }\n  | {\n      type: 'input_source_if' | 'input_source_unless'\n      input_sources: InputSource[]\n      description?: string\n    }\n  | {\n      type: 'variable_if' | 'variable_unless'\n      name: string\n      value: number | boolean | string\n      description?: string\n    }\n  | {\n      type: 'event_changed_if' | 'event_changed_unless'\n      value: boolean\n      description?: string\n    }\n"))),(0,i.kt)("p",null,"They can be created with ",(0,i.kt)("inlineCode",{parentName:"p"},"if*()")," methods."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"ifApp() // frontmost_application_if \nifDevice() // device_if \nifDeviceExists() // device_exists_if \nifKeyboardType() // keyboard_type_if \nifInputSource() // input_source_if \nifVar() // variable_if \nifEventChanged() // event_changed_if \n")),(0,i.kt)("p",null,"And use ",(0,i.kt)("inlineCode",{parentName:"p"},"unless()")," method to create the corresponding ",(0,i.kt)("inlineCode",{parentName:"p"},"_unless")," condition."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"ifApp('Finder').unless()\n")),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Generated JSON"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "type": "frontmost_application_unless",\n  "bundle_identifiers": [ "Finder" ]\n}\n'))),(0,i.kt)("p",null,"It can be added to ",(0,i.kt)("inlineCode",{parentName:"p"},"rule()")," (",(0,i.kt)("inlineCode",{parentName:"p"},"layer()"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"simlayer()"),"), or to each manipulators. "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"rule('Finder', ifApp('Finder')).manipulators([\n  map(1).to(2).condition(ifInputSource({ language: 'en' }).unless())\n])\n")),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Generated JSON"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "description": "Finder",\n  "manipulators": [\n    {\n      "type": "basic",\n      "from": {"key_code": "1"},\n      "to": [{"key_code": "2"}],\n      "conditions": [\n        {"type": "input_source_unless", "input_sources": [{"language": "en"}]},\n        {"type": "frontmost_application_if", "bundle_identifiers": ["Finder"]}\n      ]\n    }\n  ]\n}\n'))))}d.isMDXComponent=!0}}]);