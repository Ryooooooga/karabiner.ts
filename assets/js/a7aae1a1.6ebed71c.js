"use strict";(self.webpackChunkkarabiner_ts_docs=self.webpackChunkkarabiner_ts_docs||[]).push([[365],{3905:(e,n,a)=>{a.d(n,{Zo:()=>m,kt:()=>c});var t=a(7294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function l(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function i(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=t.createContext({}),s=function(e){var n=t.useContext(p),a=n;return e&&(a="function"==typeof e?e(n):l(l({},n),e)),a},m=function(e){var n=s(e.components);return t.createElement(p.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},y=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),d=s(a),y=r,c=d["".concat(p,".").concat(y)]||d[y]||u[y]||o;return a?t.createElement(c,l(l({ref:n},m),{},{components:a})):t.createElement(c,l({ref:n},m))}));function c(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=y;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i[d]="string"==typeof e?e:r,l[1]=i;for(var s=2;s<o;s++)l[s]=a[s];return t.createElement.apply(null,l)}return t.createElement.apply(null,a)}y.displayName="MDXCreateElement"},4817:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var t=a(7462),r=(a(7294),a(3905));const o={title:"layer()"},l=void 0,i={unversionedId:"rules/layer",id:"rules/layer",title:"layer()",description:"Layer is a group of manipulators which are only active when a key is pressed and held.",source:"@site/docs/rules/layer.md",sourceDirName:"rules",slug:"/rules/layer",permalink:"/rules/layer",draft:!1,tags:[],version:"current",frontMatter:{title:"layer()"},sidebar:"docs",previous:{title:"rule()",permalink:"/rules/rule"},next:{title:"simlayer()",permalink:"/rules/simlayer"}},p={},s=[{value:"How layer works",id:"how-layer-works",level:2},{value:"Layer modifiers",id:"layer-modifiers",level:2},{value:"Config the layer key",id:"config-the-layer-key",level:2},{value:"Multiple layer keys",id:"multiple-layer-keys",level:2},{value:"Problems in layer",id:"problems-in-layer",level:2}],m={toc:s},d="wrapper";function u(e){let{components:n,...a}=e;return(0,r.kt)(d,(0,t.Z)({},m,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Layer is a group of ",(0,r.kt)("inlineCode",{parentName:"p"},"manipulators")," which are only active when a key is pressed and held. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"layer('a', 'a-mode').manipulators([\n  map(1).to(2), // Only when key 'a' is pressed and held\n])\n")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Generated JSON in profiles.complex_modifications.rules"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "description": "Layer - a-mode",\n  "manipulators": [\n    {\n      "type": "basic",\n      // highlight-start\n      "from": { "key_code": "a" },\n      "to": [ {"set_variable": {"name": "a-mode", "value": 1}} ],\n      "to_after_key_up": [ {"set_variable": {"name": "a-mode", "value": 0}} ],\n      "to_if_alone": [ {"key_code": "a"} ]\n      // highlight-end\n    },\n    {\n      "type": "basic",\n      "from": {"key_code": "1"},\n      "to": [{"key_code": "2"}],\n      // highlight-next-line\n      "conditions": [ { "type": "variable_if", "name": "a-mode", "value": 1 } ]\n    }\n  ]\n}\n'))),(0,r.kt)("h2",{id:"how-layer-works"},"How layer works"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"layer()")," add a ",(0,r.kt)("inlineCode",{parentName:"p"},"variable_if")," ",(0,r.kt)("inlineCode",{parentName:"p"},"condition")," to all ",(0,r.kt)("inlineCode",{parentName:"p"},"manipulators")," in the group"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{ "type": "variable_if", "name": "a-mode", "value": 1 }\n')),(0,r.kt)("p",null,"And set the variable to ",(0,r.kt)("inlineCode",{parentName:"p"},"1")," when the layer key is pressed"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"from": { "key_code": "a" },\n"to": [ { "set_variable": {"name": "a-mode", "value": 1} } ],\n')),(0,r.kt)("p",null,"The variable is set back to ",(0,r.kt)("inlineCode",{parentName:"p"},"0")," on ",(0,r.kt)("inlineCode",{parentName:"p"},"to_after_key_up"),", so once the layer key is\nreleased the layer ",(0,r.kt)("inlineCode",{parentName:"p"},"manipulators")," are disabled."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'"to_after_key_up": [ {"set_variable": {"name": "a-mode", "value": 0}} ]\n')),(0,r.kt)("p",null,"The layer key is still functional if it is tapped alone"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"to_if_alone": [ {"key_code": "a"} ]\n')),(0,r.kt)("h2",{id:"layer-modifiers"},"Layer modifiers"),(0,r.kt)("p",null,"Layers can have modifiers, so that the layer is only active when the key and the\nmodifiers are all pressed and held. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"layer('a', 'a-mode')\n  // highlight-next-line\n  .modifiers('\u2318')\n  .manipulators([\n    map(1).to(2),\n  ])\n")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Generated JSON in profiles.complex_modifications.rules"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "description": "Layer - a-mode",\n  "manipulators": [\n    {\n      "type": "basic",\n      "from": {\n        "key_code": "a", \n        // highlight-next-line\n        "modifiers": {"mandatory": ["command"]}\n      },\n      "to": [\n        {"set_variable": {"name": "a-mode", "value": 1}}\n      ],\n      "to_after_key_up": [\n        {"set_variable": {"name": "a-mode", "value": 0}}\n      ],\n      "to_if_alone": [\n        {"key_code": "a"}\n      ]\n    },\n    {\n      "type": "basic",\n      "from": {\n        "key_code": "1",\n        // highlight-next-line\n        "modifiers": {"mandatory": ["any"]}\n      },\n      "to": [\n        {"key_code": "2"}\n      ],\n      "conditions": [\n        {"type": "variable_if", "name": "a-mode", "value": 1}\n      ]\n    }\n  ]\n}\n'))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"from.modifiers")," is set to ",(0,r.kt)("inlineCode",{parentName:"p"},'{"mandatory": ["any"]}')," for all manipulators on the\nlayer, so that the layer modifiers are not sent to manipulators to events. So\nthe manipulators on the layer cannot have other modifiers. "),(0,r.kt)("admonition",{title:"modifiers('??')",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"layer().modifiers('optionalAny')")," (or ",(0,r.kt)("inlineCode",{parentName:"p"},"'??'"),") passes modifiers to the layer. ",(0,r.kt)("br",null),"\nwith ",(0,r.kt)("inlineCode",{parentName:"p"},"layer(';').modifiers('??').manipulators({ l: toKey('\u2192') })")," ",(0,r.kt)("br",null),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"\u2318 ; + l")," triggers ",(0,r.kt)("inlineCode",{parentName:"p"},"\u2318 \u2192"))),(0,r.kt)("h2",{id:"config-the-layer-key"},"Config the layer key"),(0,r.kt)("p",null,"The layer key can also be mapped to something else by ",(0,r.kt)("inlineCode",{parentName:"p"},"layer().configKey()")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"layer('a', 'a-mode')\n    // highlight-next-line\n    .configKey((v) => v.toIfAlone('b', '\u2318'), true)\n    .manipulators([\n      map(1).to(2),\n    ])\n")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Generated JSON in profiles.complex_modifications.rules"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "description": "Layer - a-mode",\n  "manipulators": [\n    {\n      "type": "basic",\n      "from": { "key_code": "a" },\n      "to": [ { "set_variable": {"name": "a-mode", "value": 1} } ],\n      "to_after_key_up": [ { "set_variable": {"name": "a-mode", "value": 0} } ],\n      // highlight-next-line\n      "to_if_alone": [ { "key_code": "b", "modifiers": ["command"] } ]\n    },\n    {\n      "type": "basic",\n      "from": {"key_code": "1"},\n      "to": [ {"key_code": "2"} ],\n      "conditions": [ { "type": "variable_if", "name": "a-mode", "value": 1 } ]\n    }\n  ]\n}\n'))),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"The second parameter ",(0,r.kt)("inlineCode",{parentName:"p"},"replaceToIfAlone"),", of ",(0,r.kt)("inlineCode",{parentName:"p"},"configKey(, true)"),", makes sure only\nthe new ",(0,r.kt)("inlineCode",{parentName:"p"},"toIfAlone()")," is used. The layer key will otherwise still be triggered,\nsending ",(0,r.kt)("inlineCode",{parentName:"p"},"[a, b\u2318]")," instead of only ",(0,r.kt)("inlineCode",{parentName:"p"},"b\u2318"),".")),(0,r.kt)("h2",{id:"multiple-layer-keys"},"Multiple layer keys"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"layer()")," can have multiple trigger keys "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"layer(['a', ';'], 'a-mode').manipulators([\n  map(1).to(2), // When either 'a' or ';' is pressed and held\n])\n")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Generated JSON in profiles.complex_modifications.rules"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "description": "Layer - a-mode",\n  "manipulators": [\n    {\n      // highlight-start\n      "type": "basic",\n      "from": { "key_code": "semicolon" },\n      "to": [ { "set_variable": { "name": "a-mode", "value": 1 } } ],\n      "to_after_key_up": [ { "set_variable": { "name": "a-mode", "value": 0 } } ],\n      "to_if_alone": [ { "key_code": "semicolon" } ]\n      // highlight-end\n    },\n    {\n      "type": "basic",\n      "from": { "key_code": "a" },\n      "to": [ { "set_variable": { "name": "a-mode", "value": 1 } } ],\n      "to_after_key_up": [ { "set_variable": { "name": "a-mode", "value": 0 } } ],\n      "to_if_alone": [ { "key_code": "a" } ]\n    },\n    {\n      "type": "basic",\n      "from": { "key_code": "1" },\n      "to": [ { "key_code": "2" } ],\n      "conditions": [ { "type": "variable_if", "name": "a-mode", "value": 1 } ]\n    }\n  ]\n}\n'))),(0,r.kt)("p",null,"The same key can also trigger multiple layers"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"layer('a', 'a-mode').manipulators([\n  map(1).to(2),\n])\nlayer('a', 'b-mode').manipulators([\n  map(3).to(4),\n])\n")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Generated JSON in profiles.complex_modifications.rules"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "description": "Layer - a-mode",\n    "manipulators": [\n      {\n        "type": "basic",\n        "from": {"key_code": "a"},\n        "to": [\n          {"set_variable": {"name": "a-mode", "value": 1}}, \n          // highlight-next-line\n          {"set_variable": {"name": "b-mode", "value": 1}}\n        ],\n        "to_after_key_up": [\n          {"set_variable": {"name": "a-mode", "value": 0}},\n          // highlight-next-line\n          {"set_variable": {"name": "b-mode", "value": 0}}\n        ],\n        "to_if_alone": [{"key_code": "a"}]\n      },\n      {\n        "type": "basic",\n        "from": {"key_code": "1"},\n        "to": [{"key_code": "2"}],\n        "conditions": [{"type": "variable_if", "name": "a-mode", "value": 1}]\n      }\n    ]\n  },\n  {\n    "description": "Layer - b-mode",\n    "manipulators": [\n      {\n        "type": "basic",\n        "from": {"key_code": "3"},\n        "to": [{"key_code": "4"}],\n        // highlight-next-line\n        "conditions": [{"type": "variable_if", "name": "b-mode", "value": 1}]\n      }\n    ]\n]\n'))),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Both variables are set by one manipulator as "),(0,r.kt)("blockquote",{parentName:"admonition"},(0,r.kt)("p",{parentName:"blockquote"},"if there are multiple manipulators which change the same key,\nthe manipulator placed at the top is applied and other manipulators are\nignored - ",(0,r.kt)("a",{parentName:"p",href:"https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-evaluation-priority/"},"Karabiner-Elements")))),(0,r.kt)("h2",{id:"problems-in-layer"},"Problems in layer"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},'There\'re two problems in old layer. When we type "w1" really fast,\nwe trigger the "1" in w layer rather than insert "w1".\nWhen we keep press w key down, the w key won\'t repeat.\nThere won\'t be a "wwwwwwwwwwwwwwwwwwww". - ',(0,r.kt)("a",{parentName:"p",href:"https://github.com/yqrashawn/GokuRakuJoudo/blob/master/tutorial.md#simlayers"},"Goku"))))}u.isMDXComponent=!0}}]);