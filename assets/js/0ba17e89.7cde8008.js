"use strict";(self.webpackChunkkarabiner_ts_docs=self.webpackChunkkarabiner_ts_docs||[]).push([[934],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>k});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),m=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=m(e.components);return a.createElement(p.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=m(t),c=r,k=u["".concat(p,".").concat(c)]||u[c]||d[c]||o;return t?a.createElement(k,i(i({ref:n},s),{},{components:t})):a.createElement(k,i({ref:n},s))}));function k(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=c;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var m=2;m<o;m++)i[m]=t[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},9245:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>m});var a=t(7462),r=(t(7294),t(3905));const o={title:"from / map*()"},i="FromEvent and map*()",l={unversionedId:"manipulators/from",id:"manipulators/from",title:"from / map*()",description:"map() takes any valid full from event definition.",source:"@site/docs/manipulators/from.md",sourceDirName:"manipulators",slug:"/manipulators/from",permalink:"/karabiner.ts/manipulators/from",draft:!1,tags:[],version:"current",frontMatter:{title:"from / map*()"},sidebar:"docs",previous:{title:"simlayer()",permalink:"/karabiner.ts/rules/simlayer"}},p={},m=[{value:"map(key)",id:"map-key",level:2},{value:"Key alias",id:"key-alias",level:3},{value:"mapConsumerKey()",id:"map-consumer-key",level:2},{value:"mapPointingButton()",id:"map-pointing-button",level:2},{value:"mapSimultaneous()",id:"map-simultaneous",level:2}],s={toc:m},u="wrapper";function d(e){let{components:n,...t}=e;return(0,r.kt)(u,(0,a.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"fromevent-and-map"},"FromEvent and map*()"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"map()")," takes any valid full ",(0,r.kt)("a",{parentName:"p",href:"https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/from/"},"from event definition"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"map({ key_code: 'a', modifiers: { mandatory: ['left_command'] } })\n")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"FromEvent type"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"export type FromEvent = (\n  | { key_code: string | number }\n  | { consumer_key_code: string | number }\n  | { pointing_button: string | number }\n  | { any: 'key_code' | 'consumer_key_code' | 'pointing_button' }\n  | { simultaneous: Array</*...*/>, simultaneous_options?: {/*...*/} }\n) & {\n  modifiers?: { mandatory?: [/*...*/], optional?: [/*...*/] }\n}\n"))),(0,r.kt)("p",null,"There are some useful methods to help create ",(0,r.kt)("inlineCode",{parentName:"p"},"FromEvent")," easier:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#map-key"},"map(key)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#map-consumer-key"},"mapConsumerKey()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#map-pointing-button"},"mapPointingButton()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#map-simultaneous"},"mapSimultaneous()"))),(0,r.kt)("h2",{id:"map-key"},"map(key)"),(0,r.kt)("p",null,"The most common ",(0,r.kt)("inlineCode",{parentName:"p"},"FromEvent")," is with ",(0,r.kt)("inlineCode",{parentName:"p"},"key_code"),". ",(0,r.kt)("inlineCode",{parentName:"p"},"map(key)")," also supports alias\nfor some ",(0,r.kt)("inlineCode",{parentName:"p"},"key_code")," and modifiers, like ",(0,r.kt)("inlineCode",{parentName:"p"},"\u2190"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"\u2318"),", etc. "),(0,r.kt)("p",null,"The list of supported ",(0,r.kt)("inlineCode",{parentName:"p"},"key_code")," can be found ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/evan-liu/karabiner.ts/blob/main/src/karabiner/key-code.ts"},"here"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"map('a') // map(key_code)\nmap(',', 'left_command') // map(key_alias, mandatoryModifiers)\nmap(1, '\u2318', '\u21ea') // map(number_key_value, modifier_alias, modifier_alias)\nmap('\u2190', { right: '\u2318\u2325' }) // map (key_alias, { left/right: modifier_alias})\nmap('left_command', { optional: '\u21e7' }) // map(key_code, { optional: modifiers })\nmap('keypad_asterisk', 'optionalAny') // map(key_code, 'optionalAny')\n")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Generated JSON"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'// map(\'a\')\n{ "key_code": "a" }\n// map(\',\', \'left_command\')\n{ "key_code": "comma", "modifiers": { "mandatory": [ "left_command"] } }\n// map(1, \'\u2318\', \'\u21ea\')\n{ "key_code": "1", "modifiers": { "mandatory": [ "command"], "optional": [ "caps_lock"] } }\n// map(\'\u2190\', { right: \'\u2318\u2325\' })\n{ "key_code": "left_arrow", "modifiers": { "mandatory": [ "right_command", "right_option"] } }\n// map(\'left_command\', { optional: \'\u21e7\' })\n{ "key_code": "left_command", "modifiers": { "optional": [ "shift"] } }\n// map(\'keypad_asterisk\', \'optionalAny\')\n{ "key_code": "keypad_asterisk", "modifiers": { "optional": [ "any"] } }\n'))),(0,r.kt)("h3",{id:"key-alias"},"Key alias"),(0,r.kt)("p",null,"The list of supported key alias can be found ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/evan-liu/karabiner.ts/blob/main/src/utils/key-alias.ts"},"here"),","),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Key alias"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\u2318  command\n\u2325  option\n\u2303  control\n\u21e7  shift\n\u21ea  caps_lock\n\n\u2191  up_arrow\n\u2193  down_arrow\n\u2190  left_arrow\n\u2192  right_arrow\n\u21de  page_up\n\u21df  page_down\n\u2196  home\n\u2198  end\n\n\u23ce  return_or_enter\n\u238b  escape\n\u232b  delete_or_backspace\n\u2326  delete_forward\n\u21e5  tab\n\u2423  spacebar\n-  hyphen\n=  equal_sign\n[  open_bracket\n]  close_bracket\n\\  backslash\n;  semicolon\n'  quote\n`  grave_accent_and_tilde\n,  comma\n.  period\n/  slash\n"))),(0,r.kt)("p",null,"It is recommended to put the alias on a layer/simlayer to use them. "),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Example of key alias on a layer"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"layer(['z', '/'], 'emoji-mode').manipulators([\n  //           1    2    3    4    5\n  withMapper(['\u2318', '\u2325', '\u2303', '\u21e7', '\u21ea'])((k, i) =>\n    map((i + 1) as NumberKeyValue).toPaste(k),\n  ),\n  //           Paste the symbols instead of triggering the key\n  withMapper(['\u2190', '\u2192', '\u2191', '\u2193', '\u2423', '\u23ce', '\u21e5', '\u238b', '\u232b', '\u2326', '\u21ea'])((k) =>\n    map(k).toPaste(k),\n  ),\n])\n"))),(0,r.kt)("h2",{id:"map-consumer-key"},"mapConsumerKey()"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"mapConsumerKey()")," is similar to ",(0,r.kt)("inlineCode",{parentName:"p"},"map(key)")," but with ",(0,r.kt)("inlineCode",{parentName:"p"},"consumer_key_code")," instead\nof ",(0,r.kt)("inlineCode",{parentName:"p"},"key_code"),"."),(0,r.kt)("p",null,"The list of supported ",(0,r.kt)("inlineCode",{parentName:"p"},"consumer_key_code")," can be found ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/evan-liu/karabiner.ts/blob/main/src/karabiner/consumer-key-code.ts"},"here"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"mapConsumerKey('menu', '\u2318', 'any')\n")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Generated JSON"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "consumer_key_code": "menu",\n  "modifiers": { "mandatory": ["command"], "optional": ["any"] }\n}\n'))),(0,r.kt)("h2",{id:"map-pointing-button"},"mapPointingButton()"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"mapPointingButton()")," is similar to ",(0,r.kt)("inlineCode",{parentName:"p"},"map(key)")," but with ",(0,r.kt)("inlineCode",{parentName:"p"},"pointing_button")," instead\nof ",(0,r.kt)("inlineCode",{parentName:"p"},"key_code"),"."),(0,r.kt)("p",null,"The list of supported ",(0,r.kt)("inlineCode",{parentName:"p"},"pointing_button")," can be found ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/evan-liu/karabiner.ts/blob/main/src/karabiner/pointing-button.ts"},"here"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"mapPointingButton('button1', '\u2318')\n")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Generated JSON"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "pointing_button": "button1",\n  "modifiers": { "mandatory": ["command"] }\n}\n'))),(0,r.kt)("h2",{id:"map-simultaneous"},"mapSimultaneous()"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"mapSimultaneous()")," creates ",(0,r.kt)("a",{parentName:"p",href:"https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/from/simultaneous/"},(0,r.kt)("inlineCode",{parentName:"a"},"from.simultaneous")),"\nwith (optional) options and threshold parameter."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"mapSimultaneous(\n  ['a', { pointing_button: 'button1' }], // keys\n  { key_down_order: 'strict' }, // options?\n  100, // threshold?, default 50\n)\n")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Generated JSON"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "type": "basic",\n  "from": {\n    "simultaneous": [ \n      {"key_code": "a"}, \n      {"pointing_button": "button1"} \n    ],\n    "simultaneous_options": {\n      "key_down_order": "strict"\n    }\n  },\n  "parameters": { \n    "basic.simultaneous_threshold_milliseconds": 100\n  }\n}\n'))),(0,r.kt)("p",null,"The threshold parameter can also be set at ",(0,r.kt)("inlineCode",{parentName:"p"},"writeToProfile()")," for the profile. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"writeToProfile(\n  '--dry-run', // profile name \n  [], // rules\n  { 'basic.simultaneous_threshold_milliseconds': 100 }, // parameters \n)\n")))}d.isMDXComponent=!0}}]);